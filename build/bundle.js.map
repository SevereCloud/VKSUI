{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/lib/dom.ts","../../src/lib/platform.ts","../../src/lib/ssr.ts","../../src/hooks/usePlatform.ts","../../src/lib/classNames.ts","../../src/lib/getClassName.ts","../../src/components/Blocks/Div.svelte","../../src/components/Blocks/Progress.svelte","../../node_modules/style-inject/dist/style-inject.es.js","../../src/components/Service/AdaptivityContext.ts","../../src/components/Typography/Headline.svelte","../../src/components/Typography/Title.svelte","../../src/components/Typography/Caption.svelte","../../src/components/Typography/Text.svelte","../../src/components/Typography/Subhead.svelte","../../src/components/Blocks/CardGrid.svelte","../../src/components/Blocks/SimpleCell.svelte","../../src/components/Blocks/Gradient.svelte","../../src/components/Layout/HorizontalScroll.svelte","../../src/components/Blocks/CardScroll.svelte","../../src/components/Blocks/Card.svelte","../../src/components/Blocks/Header.svelte","../../src/components/Blocks/Separator.svelte","../../src/components/Blocks/Link.svelte","../../src/components/Blocks/Avatar.svelte","../../src/components/Service/SSRWrapper.svelte","../../src/components/Blocks/Group.svelte","../../src/components/Service/Touch.svelte","../../src/components/Layout/Panel.svelte","../../src/components/Blocks/Switch.svelte","../../src/components/Blocks/InfoRow.svelte","../../src/components/Blocks/List.svelte","../../src/components/Blocks/Footer.svelte","../../src/lib/browser.ts","../../src/components/Blocks/UsersStack.svelte","../../src/hooks/useBrowserInfo.ts","../../src/components/Blocks/Counter.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const canUseDOM = !!(typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement);\nexport const canUseEventListeners = canUseDOM && !!window.addEventListener;\nexport function onDOMLoaded(callback) {\n    if (document.readyState !== 'loading') {\n        callback();\n    }\n    else {\n        document.addEventListener('DOMContentLoaded', () => {\n            callback();\n        });\n    }\n}\n","import { canUseDOM } from './dom';\nexport var OS;\n(function (OS) {\n    OS[\"ANDROID\"] = \"android\";\n    OS[\"IOS\"] = \"ios\";\n})(OS || (OS = {}));\nexport const ANDROID = OS.ANDROID;\nexport const IOS = OS.IOS;\nexport function platform(useragent) {\n    const ua = useragent || (canUseDOM && navigator.userAgent) || '';\n    return /iphone|ipad|ipod/i.test(ua) ? IOS : ANDROID;\n}\n","import { platform } from './platform';\nexport const SSRContextKey = 'SSRContext';\nexport const SSRBuildContext = (props) => {\n    const { userAgent } = props;\n    const contextValue = {\n        platform: platform(userAgent),\n        userAgent,\n    };\n    return contextValue;\n};\n","import { getContext } from 'svelte';\nimport { platform } from '../lib/platform';\nimport { SSRContextKey } from '../lib/ssr';\nexport default function usePlatform() {\n    const ssrContext = getContext(SSRContextKey);\n    if (ssrContext && ssrContext.platform) {\n        return ssrContext.platform;\n    }\n    return platform();\n}\n","export default function classNames(...classnames) {\n    let result = [];\n    classnames.forEach((item) => {\n        if (!item) {\n            return;\n        }\n        switch (typeof item) {\n            case 'string':\n                result.push(item);\n                break;\n            case 'object':\n                Object.keys(item).forEach((key) => {\n                    if (item[key]) {\n                        result.push(key);\n                    }\n                });\n                break;\n            default:\n                result.push(`${item}`);\n        }\n    });\n    return result.join(' ');\n}\n","import { platform } from '../lib/platform';\nexport default function getClassName(base, osName = platform()) {\n    return `${base} ${base}--${osName}`;\n}\n","<style>\n  .Div--ios {\n    padding: 12px;\n  }\n\n  .Div--android {\n    padding: 12px 16px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nКомпонент с установленными паддингами, которые отличаются в зависимости от платформы. Необходим, когда есть какой-то\nкастомный блок, у которого должны быть стандартные отступы.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Div', platform), $$props.class)}\"\n>\n  <slot />\n</div>\n","<style>\n  .Progress {\n    border-radius: 2px;\n    background: var(--placeholder_icon_background);\n  }\n\n  .Progress__in {\n    height: 4px;\n    border-radius: 2px;\n    transition: width 0.2s ease;\n    background: var(--accent);\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let value = 0;\n\n  const platform = usePlatform();\n</script>\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Progress', platform), $$props.class)}\"\n>\n  <div class=\"Progress__bg\"></div>\n  <div class=\"Progress__in\" style=\"{'width:' + `${value}%`}\"></div>\n</div>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export var SizeType;\n(function (SizeType) {\n    SizeType[\"COMPACT\"] = \"compact\";\n    SizeType[\"REGULAR\"] = \"regular\";\n})(SizeType || (SizeType = {}));\nexport var ViewWidth;\n(function (ViewWidth) {\n    ViewWidth[ViewWidth[\"SMALL_MOBILE\"] = 1] = \"SMALL_MOBILE\";\n    ViewWidth[ViewWidth[\"MOBILE\"] = 2] = \"MOBILE\";\n    ViewWidth[ViewWidth[\"SMALL_TABLET\"] = 3] = \"SMALL_TABLET\";\n    ViewWidth[ViewWidth[\"TABLET\"] = 4] = \"TABLET\";\n    ViewWidth[ViewWidth[\"DESKTOP\"] = 5] = \"DESKTOP\";\n})(ViewWidth || (ViewWidth = {}));\n","<style>\n  .Headline {\n    margin: 0;\n    font-size: 16px;\n    line-height: 20px;\n  }\n\n  .Headline--w-regular {\n    font-weight: 400;\n  }\n\n  .Headline--w-medium {\n    font-weight: 500;\n  }\n\n  .Headline--w-semibold {\n    font-weight: 600;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import { ANDROID } from '../../lib/platform';\n\n  export let weight: 'regular' | 'medium' | 'semibold';\n\n  const platform = usePlatform();\n\n  let headlineWeight = weight;\n\n  if (platform === ANDROID && weight === 'semibold') {\n    headlineWeight = 'medium';\n  }\n</script>\n\n<!-- \n@component\nУпрощения в Android-версии (происходят автоматически):\n* `semibold` превращается в `medium`\n\n```jsx\n<Div>\n  <Headline weight=\"regular\" style=\"margin-bottom: 16px\">Headline regular</Headline>\n  <Headline weight=\"medium\" style=\"margin-bottom: 16px\">Headline medium</Headline>\n  <Headline weight=\"semibold\" style=\"margin-bottom: 16px\">Headline semibold</Headline>\n</Div>\n```\n-->\n\n{#if platform === ANDROID}\n  <h3\n    {...$$restProps}\n    class=\"{classNames(getClassName('Headline', platform), `Headline--w-${headlineWeight}`, $$props.class)}\"\n  >\n    <slot />\n  </h3>\n{:else}\n  <h4\n    {...$$restProps}\n    class=\"{classNames(getClassName('Headline', platform), `Headline--w-${headlineWeight}`, $$props.class)}\"\n  >\n    <slot />\n  </h4>\n{/if}\n","<style>\n  .Title {\n    margin: 0;\n  }\n\n  .Title--l-1 {\n    font-size: 24px;\n    line-height: 28px;\n  }\n\n  .Title--l-2 {\n    font-size: 20px;\n    line-height: 24px;\n  }\n\n  .Title--l-3 {\n    font-size: 17px;\n    line-height: 22px;\n  }\n\n  .Title--w-regular {\n    font-weight: 400;\n  }\n\n  .Title--w-medium {\n    font-weight: 500;\n  }\n\n  .Title--w-semibold {\n    font-weight: 600;\n  }\n\n  .Title--w-bold {\n    font-weight: 700;\n  }\n\n  .Title--w-heavy {\n    font-weight: 800;\n  }\n</style>\n\n<script lang=\"ts\">\n  import Headline from './Headline.svelte';\n  import { ANDROID } from '../../lib/platform';\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let level: '1' | '2' | '3';\n  export let weight: 'heavy' | 'bold' | 'semibold' | 'medium' | 'regular';\n\n  const platform = usePlatform();\n\n  let titleWeight = weight;\n  let headlineWeight: 'regular' | 'medium' | 'semibold';\n  if (platform === ANDROID) {\n    if (level === '3') {\n      switch (weight) {\n        case 'heavy':\n        case 'bold':\n        case 'semibold':\n          headlineWeight = 'medium';\n          break;\n        default:\n          headlineWeight = weight;\n      }\n    }\n    if (level === '1' && weight === 'heavy') {\n      titleWeight = 'bold';\n    }\n    if (level === '2') {\n      switch (weight) {\n        case 'heavy':\n          titleWeight = 'bold';\n          break;\n        case 'semibold':\n          titleWeight = 'medium';\n      }\n    }\n  }\n</script>\n\n<!-- \n@component\nУпрощения в Android-версии (происходят автоматически):\n* `semibold` превращается в `medium`\n* `heavy` превращается в `bold`\n* `<Title level=\"3\" />` превращается в `<Headline />`\n\n```jsx\n<Div>\n  <Title level=\"1\" weight=\"semibold\" style=\"margin-bottom: 16px\">Title 1 semibold</Title>\n  <Title level=\"1\" weight=\"bold\" style=\"margin-bottom: 16px\">Title 1 bold</Title>\n  <Title level=\"1\" weight=\"heavy\" style=\"margin-bottom: 16px\">Title 1 heavy</Title>\n  <Title level=\"2\" weight=\"regular\" style=\"margin-bottom: 16px\">Title 2 regular</Title>\n  <Title level=\"2\" weight=\"semibold\" style=\"margin-bottom: 16px\">Title 2 semibold</Title>\n  <Title level=\"2\" weight=\"heavy\" style=\"margin-bottom: 16px\">Title 2 heavy</Title>\n  <Title level=\"3\" weight=\"regular\" style=\"margin-bottom: 16px\">Title 3 regular</Title>\n  <Title level=\"3\" weight=\"medium\" style=\"margin-bottom: 16px\">Title 3 medium</Title>\n  <Title level=\"3\" weight=\"semibold\">Title 3 semibold</Title>\n</Div>\n```\n-->\n\n{#if level === '3' && platform === ANDROID}\n  <Headline {...$$restProps} weight=\"{headlineWeight}\" class=\"{$$props.class}\">\n    <slot />\n  </Headline>\n{:else if level === '1'}\n  <h1\n    {...$$restProps}\n    class=\"{classNames(getClassName('Title', platform), `Title--w-${titleWeight}`, `Title--l-${level}`, $$props.class)}\"\n  >\n    <slot />\n  </h1>\n{:else if level === '2'}\n  <h2\n    {...$$restProps}\n    class=\"{classNames(getClassName('Title', platform), `Title--w-${titleWeight}`, `Title--l-${level}`, $$props.class)}\"\n  >\n    <slot />\n  </h2>\n{:else if level === '3'}\n  <h3\n    {...$$restProps}\n    class=\"{classNames(getClassName('Title', platform), `Title--w-${titleWeight}`, `Title--l-${level}`, $$props.class)}\"\n  >\n    <slot />\n  </h3>\n{:else}\n  <div\n    {...$$restProps}\n    class=\"{classNames(getClassName('Title', platform), `Title--w-${titleWeight}`, `Title--l-${level}`, $$props.class)}\"\n  >\n    <slot />\n  </div>\n{/if}\n","<style>\n  .Caption--caps {\n    text-transform: uppercase;\n  }\n\n  .Caption--l-1 {\n    font-size: 13px;\n    line-height: 16px;\n  }\n\n  .Caption--l-2 {\n    font-size: 12px;\n    line-height: 14px;\n  }\n\n  .Caption--l-3 {\n    font-size: 11px;\n    line-height: 14px;\n  }\n\n  .Caption--l-4 {\n    font-size: 9px;\n    line-height: 12px;\n  }\n\n  .Caption--w-regular {\n    font-weight: 400;\n  }\n\n  .Caption--w-medium {\n    font-weight: 500;\n  }\n\n  .Caption--w-semibold {\n    font-weight: 600;\n  }\n\n  .Caption--w-bold {\n    font-weight: 700;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import { ANDROID } from '../../lib/platform';\n\n  export let weight: 'regular' | 'medium' | 'semibold' | 'bold';\n  export let level: '1' | '2' | '3' | '4';\n  export let caps: boolean = false;\n\n  const platform = usePlatform();\n\n  let captionWeight = weight;\n\n  if (platform === ANDROID && weight === 'semibold') {\n    captionWeight = 'medium';\n  }\n</script>\n\n<!-- \n@component\nУпрощения в Android-версии (происходят автоматически):\n* `semibold` превращается в `medium`\n\n```jsx\n<Div>\n  <Caption level=\"1\" weight=\"regular\" style=\"margin-bottom: 16px\">Caption 1 regular</Caption>\n  <Caption level=\"1\" weight=\"medium\" style=\"margin-bottom: 16px\">Caption 1 medium</Caption>\n  <Caption level=\"1\" weight=\"semibold\" style=\"margin-bottom: 16px\">Caption 1 semibold</Caption>\n  <Caption level=\"1\" weight=\"semibold\" caps style=\"margin-bottom: 16px\">Caption CAPS 1 semibold</Caption>\n  <Caption level=\"2\" weight=\"regular\" style=\"margin-bottom: 16px\">Caption 2 regular</Caption>\n  <Caption level=\"2\" weight=\"medium\" style=\"margin-bottom: 16px\">Caption 2 medium</Caption>\n  <Caption level=\"2\" weight=\"semibold\" style=\"margin-bottom: 16px\">Caption 2 semibold</Caption>\n  <Caption level=\"2\" weight=\"semibold\" caps style=\"margin-bottom: 16px\">Caption CAPS 2 semibold</Caption>\n  <Caption level=\"3\" weight=\"regular\" style=\"margin-bottom: 16px\">Caption 3 regular</Caption>\n  <Caption level=\"3\" weight=\"semibold\" caps style=\"margin-bottom: 16px\">Caption CAPS 3 semibold</Caption>\n  <Caption level=\"4\" weight=\"regular\" style=\"margin-bottom: 16px\">Caption 4 regular</Caption>\n  <Caption level=\"4\" weight=\"bold\" caps>Caption CAPS 4 bold</Caption>\n</Div>\n```\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Caption', platform), `Caption--w-${captionWeight}`, `Caption--l-${level}`, { 'Caption--caps': caps }, $$props.class)}\"\n>\n  <slot />\n</div>\n","<style>\n  .Text {\n    font-size: 15px;\n    line-height: 20px;\n  }\n\n  .Text--w-regular {\n    font-weight: 400;\n  }\n\n  .Text--w-medium {\n    font-weight: 500;\n  }\n\n  .Text--w-semibold {\n    font-weight: 600;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import { ANDROID } from '../../lib/platform';\n\n  export let weight: 'regular' | 'medium' | 'semibold';\n\n  const platform = usePlatform();\n\n  let textWeight = weight;\n\n  if (platform === ANDROID && weight === 'semibold') {\n    textWeight = 'medium';\n  }\n</script>\n\n<!-- \n@component\nУпрощения в Android-версии (происходят автоматически):\n* `semibold` превращается в `medium`\n\n```jsx\n<Div>\n  <Text weight=\"regular\" style=\"margin-bottom: 16px\">Text regular</Text>\n  <Text weight=\"medium\" style=\"margin-bottom: 16px\">Text medium</Text>\n  <Text weight=\"semibold\" style=\"margin-bottom: 16px\">Text semibold</Text>\n</Div>\n```\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Text', platform), `Text--w-${textWeight}`, $$props.class)}\"\n>\n  <slot />\n</div>\n","<style>\n  .Subhead {\n    margin: 0;\n    font-size: 14px;\n    line-height: 18px;\n  }\n\n  .Subhead--w-regular {\n    font-weight: 400;\n  }\n\n  .Subhead--w-medium {\n    font-weight: 500;\n  }\n\n  .Subhead--w-semibold {\n    font-weight: 600;\n  }\n\n  .Subhead--w-bold {\n    font-weight: 600;\n  }\n\n  .InfoRow__header {\n    margin-bottom: 2px;\n    color: var(--text_secondary);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import { ANDROID } from '../../lib/platform';\n\n  export let weight: 'regular' | 'medium' | 'semibold' | 'bold';\n\n  const platform = usePlatform();\n\n  let subheadWeight = weight;\n\n  if (platform === ANDROID && weight === 'semibold') {\n    subheadWeight = 'medium';\n  }\n</script>\n\n<!-- \n@component\nУпрощения в Android-версии (происходят автоматически):\n* `semibold` превращается в `medium`\n\n```jsx\n<Div>\n  <Subhead weight=\"regular\" style=\"margin-bottom: 16px\">Subhead regular</Subhead>\n  <Subhead weight=\"medium\" style=\"margin-bottom: 16px\">Subhead medium</Subhead>\n  <Subhead weight=\"semibold\" style=\"margin-bottom: 16px\">Subhead semibold</Subhead>\n  <Subhead weight=\"bold\" style=\"margin-bottom: 16px\">Subhead bold</Subhead>\n</Div>\n```\n-->\n\n{#if platform === ANDROID}\n  <h4\n    {...$$restProps}\n    class=\"{classNames(getClassName('Subhead', platform), `Subhead--w-${subheadWeight}`, $$props.class)}\"\n  >\n    <slot />\n  </h4>\n{:else}\n  <h5\n    {...$$restProps}\n    class=\"{classNames(getClassName('Subhead', platform), `Subhead--w-${subheadWeight}`, $$props.class)}\"\n  >\n    <slot />\n  </h5>\n{/if}\n","<style>\n  .CardGrid {\n    margin-top: -8px;\n  }\n\n  .CardGrid::after {\n    clear: both;\n    content: '';\n    display: block;\n    width: 100%;\n  }\n\n  .CardGrid :global(.Card) {\n    float: left;\n    margin-top: 8px;\n  }\n\n  .CardGrid :global(.Card--sz-l) {\n    width: 100%;\n  }\n\n  .CardGrid :global(.Card--sz-m) {\n    width: calc((100% - 8px) / 2);\n  }\n\n  .CardGrid :global(.Card--sz-m + .Card--sz-m) {\n    margin-left: 8px;\n  }\n\n  .CardGrid :global(.Card--sz-s) {\n    width: calc((100% - 2 * 8px) / 3);\n  }\n\n  .CardGrid :global(.Card--sz-s + .Card--sz-s) {\n    margin-left: 8px;\n  }\n\n  /**\n * iOS\n */\n\n  .CardGrid--ios {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  /**\n * Android\n */\n\n  .CardGrid--android {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nСетка для `Card`.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('CardGrid', platform), $$props.class)}\"\n>\n  <slot />\n</div>\n","<style>\n  .SimpleCell {\n    display: flex;\n    align-items: center;\n    min-height: 48px;\n    white-space: nowrap;\n    text-decoration: none;\n    color: var(--text_primary);\n  }\n\n  .SimpleCell--sizeX-compact {\n    border-radius: 0;\n  }\n\n  .SimpleCell--mult {\n    white-space: normal;\n  }\n\n  .SimpleCell--mult .SimpleCell__description,\n  .SimpleCell--mult .SimpleCell__children {\n    text-overflow: initial;\n  }\n\n  .SimpleCell :global(.Avatar),\n  .SimpleCell :global(.Icon) {\n    flex-shrink: 0;\n  }\n\n  .SimpleCell :global(.Icon) {\n    color: var(--accent);\n  }\n\n  .SimpleCell__main {\n    max-width: 100%;\n    flex-grow: 1;\n    min-width: 0;\n    flex-shrink: initial;\n    overflow: hidden;\n  }\n\n  .SimpleCell :global(.Icon),\n  .SimpleCell :global(.Avatar) {\n    padding-right: 12px;\n  }\n\n  .SimpleCell :global(.Icon--28) {\n    padding-right: 16px;\n  }\n\n  .SimpleCell :global(.Icon),\n  .SimpleCell :global(.Avatar--sz-32),\n  .SimpleCell :global(.Avatar--sz-28) {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  .SimpleCell :global(.Avatar--sz-40) {\n    padding-top: 4px;\n    padding-bottom: 4px;\n  }\n\n  .SimpleCell :global(.Avatar--sz-48),\n  .SimpleCell :global(.Avatar--sz-72) {\n    padding-top: 6px;\n    padding-bottom: 6px;\n  }\n\n  .SimpleCell__description {\n    color: var(--text_secondary);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 13px;\n    line-height: 16px;\n    margin-top: 3px;\n  }\n\n  .SimpleCell\n    :global(.Avatar--sz-32 ~ .SimpleCell__main .SimpleCell__description),\n  .SimpleCell\n    :global(.Avatar--sz-28 ~ .SimpleCell__main .SimpleCell__description) {\n    margin-top: 2px;\n  }\n\n  .SimpleCell__children {\n    color: var(--text_primary);\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  .SimpleCell__indicator {\n    color: var(--text_secondary);\n    min-width: 0;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    padding-left: 4px;\n  }\n\n  .SimpleCell__after {\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    color: var(--accent);\n  }\n\n  .SimpleCell__after :global(.Icon) {\n    padding-left: 8px;\n  }\n\n  .SimpleCell__after :global(.Icon:last-child) {\n    padding-right: 2px;\n  }\n\n  .SimpleCell :global(.Switch) {\n    padding-left: 10px;\n  }\n\n  .SimpleCell__after :global(.IconButton) :global(.Icon--28),\n  .SimpleCell__after :global(.IconButton) :global(.Icon--28 ~ *) {\n    margin-right: -8px;\n  }\n\n  .SimpleCell__after :global(.IconButton) :global(.Icon--24),\n  .SimpleCell__after :global(.IconButton) :global(.Icon--24 ~ *) {\n    margin-right: -10px;\n  }\n\n  .SimpleCell__after :global(.IconButton) :global(.Icon--16),\n  .SimpleCell__after :global(.IconButton) :global(.Icon--16 ~ *) {\n    margin-right: -14px;\n  }\n\n  .SimpleCell__after :global(.IconButton) :global(.Icon--w-8),\n  .SimpleCell__after :global(.IconButton) :global(.Icon--w-8 ~ *) {\n    margin-right: -12px;\n  }\n\n  /**\n * iOS\n */\n\n  .SimpleCell--ios {\n    font-size: 17px;\n    line-height: 22px;\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  .SimpleCell--ios .SimpleCell__main,\n  .SimpleCell--ios .SimpleCell__indicator {\n    padding-top: 9px;\n    padding-bottom: 11px;\n  }\n\n  .SimpleCell--ios :global(.Avatar:not(.Avatar--sz-32) ~ .SimpleCell__main),\n  .SimpleCell--ios\n    :global(.Avatar:not(.Avatar--sz-32) ~ .SimpleCell__indicator) {\n    font-size: 16px;\n    line-height: 20px;\n  }\n\n  .SimpleCell--ios :global(.Icon--28),\n  .SimpleCell--ios :global(.Avatar--sz-32),\n  .SimpleCell--ios :global(.Avatar--sz-28) {\n    padding-left: 4px;\n  }\n\n  .SimpleCell--ios .SimpleCell__after :global(.Icon--chevron_24) {\n    color: var(--icon_tertiary);\n    padding-right: 4px;\n    padding-left: 12px;\n  }\n\n  .SimpleCell--ios .SimpleCell__after :global(.IconButton .Icon--16),\n  .SimpleCell--ios .SimpleCell__after :global(.IconButton .Icon--16 ~ *) {\n    margin-right: -12px;\n  }\n\n  /**\n * Android\n */\n\n  .SimpleCell--android {\n    font-size: 16px;\n    line-height: 20px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n\n  .SimpleCell--android .SimpleCell__main,\n  .SimpleCell--android .SimpleCell__indicator {\n    padding-top: 11px;\n    padding-bottom: 10px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import { IOS } from '../../lib/platform';\n  import { SizeType } from '../Service/AdaptivityContext';\n\n  export let indicator: any = undefined;\n  export let description: string = '';\n  export let sizeX: SizeType = SizeType.REGULAR;\n  /**\n   * Убирает анимацию нажатия\n   */\n  //  disabled?: boolean;\n\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  export let expandable: boolean = false;\n  export let multiline: boolean = false;\n\n  const platform = usePlatform();\n\n  const SLOTS = $$props.$$slots;\n</script>\n\n<!-- \n@component\nSimpleCell — это упрощенная и улучшенная с точки зрения соответствия дизайну версия Cell. Она не может быть\nудаляемой, выделяемой или перетаскиваемой. У неё нет размеров. В ней меньше html-элементов.\nВсё это влияет на скорость её отрисовки, особенно если идёт речь о сотнях экземпляров.\n-->\n\n<!-- TODO: Tappable -->\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('SimpleCell', platform), `SimpleCell--sizeX-${sizeX}`, { 'SimpleCell--exp': expandable, 'SimpleCell--mult': multiline }, $$props.class)}\"\n>\n  <slot name=\"before\" />\n  <div class=\"SimpleCell__main\">\n    <div class=\"SimpleCell__children\">\n      <slot />\n    </div>\n    {#if (SLOTS && SLOTS.description) || description}\n      <div class=\"SimpleCell__description\">\n        <slot name=\"description\">{description}</slot>\n      </div>\n    {/if}\n  </div>\n  <!-- TODO: что насчет null? -->\n  {#if (SLOTS && SLOTS.indicator) || typeof indicator !== 'undefined'}\n    <div class=\"SimpleCell__indicator\">\n      <slot name=\"indicator\">{indicator}</slot>\n    </div>\n  {/if}\n  {#if (SLOTS && SLOTS.after) || (expandable && platform === IOS)}\n    <div class=\"SimpleCell__after\">\n      <slot name=\"after\" />\n      <!-- TODO: иконка для iOS -->\n    </div>\n  {/if}\n</div>\n","<style>\n  .Gradient--md-tint.Gradient--to-top {\n    background: linear-gradient(\n      to top,\n      #f5f5f5,\n      rgba(245, 245, 245, 0.98),\n      rgba(245, 245, 245, 0.94),\n      rgba(245, 245, 245, 0.88),\n      rgba(245, 245, 245, 0.8),\n      rgba(245, 245, 245, 0.71),\n      rgba(245, 245, 245, 0.61),\n      rgba(245, 245, 245, 0.5),\n      rgba(245, 245, 245, 0.39),\n      rgba(245, 245, 245, 0.29),\n      rgba(245, 245, 245, 0.2),\n      rgba(245, 245, 245, 0.12),\n      rgba(245, 245, 245, 0.06),\n      rgba(245, 245, 245, 0.02),\n      rgba(245, 245, 245, 0)\n    );\n  }\n\n  .Gradient--md-tint.Gradient--to-bottom {\n    background: linear-gradient(\n      to bottom,\n      #f5f5f5,\n      rgba(245, 245, 245, 0.98),\n      rgba(245, 245, 245, 0.94),\n      rgba(245, 245, 245, 0.88),\n      rgba(245, 245, 245, 0.8),\n      rgba(245, 245, 245, 0.71),\n      rgba(245, 245, 245, 0.61),\n      rgba(245, 245, 245, 0.5),\n      rgba(245, 245, 245, 0.39),\n      rgba(245, 245, 245, 0.29),\n      rgba(245, 245, 245, 0.2),\n      rgba(245, 245, 245, 0.12),\n      rgba(245, 245, 245, 0.06),\n      rgba(245, 245, 245, 0.02),\n      rgba(245, 245, 245, 0)\n    );\n  }\n\n  :global(body[scheme='space_gray']) .Gradient--md-tint.Gradient--to-top {\n    background: linear-gradient(\n      to top,\n      #232324,\n      rgba(35, 35, 36, 0.98),\n      rgba(35, 35, 36, 0.94),\n      rgba(35, 35, 36, 0.88),\n      rgba(35, 35, 36, 0.8),\n      rgba(35, 35, 36, 0.71),\n      rgba(35, 35, 36, 0.61),\n      rgba(35, 35, 36, 0.5),\n      rgba(35, 35, 36, 0.39),\n      rgba(35, 35, 36, 0.29),\n      rgba(35, 35, 36, 0.2),\n      rgba(35, 35, 36, 0.12),\n      rgba(35, 35, 36, 0.06),\n      rgba(35, 35, 36, 0.02),\n      rgba(35, 35, 36, 0)\n    );\n  }\n\n  :global(body[scheme='space_gray']) .Gradient--md-tint.Gradient--to-bottom {\n    background: linear-gradient(\n      to bottom,\n      #232324,\n      rgba(35, 35, 36, 0.98),\n      rgba(35, 35, 36, 0.94),\n      rgba(35, 35, 36, 0.88),\n      rgba(35, 35, 36, 0.8),\n      rgba(35, 35, 36, 0.71),\n      rgba(35, 35, 36, 0.61),\n      rgba(35, 35, 36, 0.5),\n      rgba(35, 35, 36, 0.39),\n      rgba(35, 35, 36, 0.29),\n      rgba(35, 35, 36, 0.2),\n      rgba(35, 35, 36, 0.12),\n      rgba(35, 35, 36, 0.06),\n      rgba(35, 35, 36, 0.02),\n      rgba(35, 35, 36, 0)\n    );\n  }\n</style>\n\n<script lang=\"ts\">\n  import classNames from '../../lib/classNames';\n\n  export let mode: 'tint' | 'white' | 'black' = 'tint';\n  export let to: 'top' | 'bottom' = 'top';\n</script>\n\n<div\n  {...$$restProps}\n  class=\"{classNames('Gradient', `Gradient--md-${mode}`, `Gradient--to-${to}`, $$props.class)}\"\n>\n  <slot />\n</div>\n","<style>\n  .HorizontalScroll {\n    position: relative;\n    overflow: hidden;\n  }\n\n  .HorizontalScroll__in {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-bottom: 20px;\n    margin-bottom: -20px;\n  }\n\n  .HorizontalScroll__in::-webkit-scrollbar {\n    display: none;\n  }\n</style>\n\n<script lang=\"ts\">\n  import classNames from '../../lib/classNames';\n</script>\n\n<!-- \n@component\nКомпонент для отрисовки \"длинного\" содержимого, которое можно скроллить по горизонтали.\n-->\n\n<div {...$$restProps} class=\"{classNames('HorizontalScroll', $$props.class)}\">\n  <div class=\"HorizontalScroll__in\">\n    <slot />\n  </div>\n</div>\n","<style>\n  .CardScroll__in {\n    display: flex;\n    align-items: stretch;\n  }\n\n  .CardScroll :global(.Card) {\n    margin-right: 8px;\n    flex-shrink: 0;\n  }\n\n  .CardScroll :global(.Card:last-child) {\n    margin-right: 0;\n  }\n\n  .CardScroll__in::before,\n  .CardScroll__in::after {\n    content: '';\n    display: block;\n    flex-shrink: 0;\n  }\n\n  /**\n * iOS\n */\n\n  .CardScroll--ios .CardScroll__in::before,\n  .CardScroll--ios .CardScroll__in::after {\n    width: 12px;\n  }\n\n  .CardScroll--ios :global(.Card--sz-l) {\n    width: calc(100% - 24px);\n    margin-right: 12px;\n  }\n\n  /**\n * Android\n */\n\n  .CardScroll--android .CardScroll__in::before,\n  .CardScroll--android .CardScroll__in::after {\n    width: 16px;\n  }\n\n  .CardScroll--android :global(.Card--sz-l) {\n    width: calc(100% - 32px);\n    margin-right: 16px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import HorizontalScroll from '../Layout/HorizontalScroll.svelte';\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nГоризонтальный скролл для `Card`.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('CardScroll', platform), $$props.class)}\"\n>\n  <HorizontalScroll>\n    <div class=\"CardScroll__in\">\n      <slot />\n    </div>\n  </HorizontalScroll>\n</div>\n","<style>\n  .Card {\n    position: relative;\n    background: var(--content_tint_background);\n  }\n\n  .Card__in {\n    position: relative;\n    z-index: 2;\n    border-radius: inherit;\n  }\n\n  .Card--md-shadow {\n    box-shadow: 0 2px 24px 0 rgba(0, 0, 0, 0.08), 0 0 2px 0 rgba(0, 0, 0, 0.08);\n    background: var(--modal_card_background);\n  }\n\n  .Card--md-outline {\n    background: var(--modal_card_background);\n  }\n\n  .Card--md-outline::before {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    content: '';\n    display: block;\n    border: 1px solid var(--image_border);\n    z-index: 1;\n    box-sizing: border-box;\n    border-radius: inherit;\n  }\n\n  @media (min-resolution: 2dppx) {\n    .Card--md-outline::before {\n      border-width: 0.5px;\n    }\n  }\n\n  @media (min-resolution: 3dppx) {\n    .Card--md-outline::before {\n      border-width: 0.33px;\n    }\n  }\n\n  /**\n  * iOS\n */\n\n  .Card--ios.Card--sz-s {\n    border-radius: 6px;\n  }\n\n  .Card--ios.Card--sz-m {\n    border-radius: 10px;\n  }\n\n  .Card--ios.Card--sz-l {\n    border-radius: 10px;\n  }\n\n  /**\n * Android\n */\n\n  .Card--android.Card--sz-s {\n    border-radius: 6px;\n  }\n\n  .Card--android.Card--sz-m {\n    border-radius: 8px;\n  }\n\n  .Card--android.Card--sz-l {\n    border-radius: 8px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let size: 's' | 'm' | 'l' = 'm';\n  export let mode: 'tint' | 'shadow' | 'outline' = 'tint';\n\n  const platform = usePlatform();\n</script>\n\n<div\n  {...$$restProps}\n  class=\"{classNames($$props.class, getClassName('Card', platform), `Card--sz-${size}`, `Card--md-${mode}`)}\"\n>\n  <div class=\"Card__in\">\n    <slot />\n  </div>\n</div>\n","<style>\n  .Header {\n    user-select: text;\n  }\n\n  .Header__in {\n    display: flex;\n    align-items: baseline;\n    justify-content: space-between;\n  }\n\n  .Header__content {\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-weight: 600;\n  }\n\n  .Header__subtitle {\n    color: var(--text_secondary);\n    font-weight: normal;\n    font-size: 13px;\n    line-height: 16px;\n  }\n\n  .Header--mode-primary .Header__content {\n    color: var(--text_primary);\n  }\n\n  .Header--mode-secondary .Header__content {\n    color: var(--text_secondary);\n    text-transform: uppercase;\n  }\n\n  .Header--pi .Header__content {\n    color: var(--text_primary);\n  }\n\n  .Header__indicator {\n    margin-right: auto;\n    color: var(--text_secondary);\n    font-size: 13px;\n    line-height: 16px;\n    margin-left: 8px;\n  }\n\n  .Header__aside {\n    white-space: nowrap;\n    font-size: 15px;\n    line-height: 20px;\n    margin-left: 12px;\n  }\n\n  .Header__aside > .Icon {\n    position: relative;\n    color: var(--icon_secondary);\n  }\n\n  .Header__aside > .Icon--24 {\n    top: 3px;\n  }\n\n  .Header__aside > .Icon--16 {\n    top: 1px;\n  }\n\n  .Header--ios {\n    padding: 0 12px;\n  }\n\n  .Header--ios.Header--mode-primary .Header__content {\n    font-size: 17px;\n    line-height: 22px;\n    padding: 13px 0 9px;\n  }\n\n  .Header--ios.Header--mode-secondary .Header__content {\n    padding: 14px 0 10px;\n    font-size: 13px;\n    line-height: 16px;\n  }\n\n  .Header--android {\n    padding: 0 16px;\n  }\n\n  .Header--android.Header--mode-primary .Header__content {\n    padding: 15px 0 9px;\n    font-size: 16px;\n    line-height: 20px;\n  }\n\n  .Header--android.Header--mode-secondary .Header__content {\n    padding: 15px 0 9px;\n    font-size: 13px;\n    line-height: 16px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let indicator: any = undefined;\n  export let subtitle: string = '';\n  export let mode: 'primary' | 'secondary' = 'primary';\n\n  const platform = usePlatform();\n\n  const SLOTS = $$props.$$slots;\n</script>\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Header', platform), { 'Header--pi': typeof indicator === 'string' || typeof indicator === 'number' }, `Header--mode-${mode}`, $$props.class)}\"\n>\n\n  <div class=\"Header__in\">\n    <div class=\"Header__content\">\n      <slot />\n      {#if (SLOTS && SLOTS.subtitle) || subtitle !== ''}\n        <div class=\"Header__subtitle\">\n          <slot name=\"subtitle\">{subtitle}</slot>\n        </div>\n      {/if}\n    </div>\n    {#if (SLOTS && SLOTS.indicator) || typeof indicator !== 'undefined'}\n      <div class=\"Header__indicator\">\n        <slot name=\"indicator\">{indicator}</slot>\n      </div>\n    {/if}\n    {#if SLOTS && SLOTS.aside}\n      <div class=\"Header__aside\">\n        <slot name=\"aside\" />\n      </div>\n    {/if}\n  </div>\n</div>\n","<style>\n  .Separator__in {\n    height: 1px;\n    background: var(--separator_common);\n    transform-origin: center top;\n  }\n\n  @media (min-resolution: 2dppx) {\n    .Separator__in {\n      transform: scaleY(0.5);\n    }\n  }\n\n  @media (min-resolution: 3dppx) {\n    .Separator__in {\n      transform: scaleY(0.32);\n    }\n  }\n\n  .Separator:not(.Separator--wide).Separator--ios .Separator__in {\n    margin-left: 12px;\n    margin-right: 12px;\n  }\n\n  .Separator:not(.Separator--wide).Separator--android .Separator__in {\n    margin-left: 16px;\n    margin-right: 16px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  /**\n   * С этим свойством компонент не будет иметь отступы слева и справа\n   */\n  export let wide = false;\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nИспользуется для разделения какого-либо контента. Отступы справа и слева контролируются свойством `wide`.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Separator', platform), $$props.class, {\n    'Separator--wide': wide,\n  })}\"\n>\n  <div class=\"Separator__in\"></div>\n</div>\n","<style>\n  .Link {\n    color: var(--accent);\n    text-decoration: none;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let href = '';\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nНадстройка над `<a />`.\n\n```jsx\n<Link href=\"https://google.com\" target=\"_blank\">Google</Link>\n<Link href=\"/profile\">Profile</Link>\n```\n-->\n\n<a\n  href=\"{href}\"\n  {...$$restProps}\n  class=\"{classNames(getClassName('Link', platform), $$props.class)}\"\n>\n  <slot />\n</a>\n","<style>\n  .Avatar {\n    box-sizing: border-box;\n  }\n\n  .Avatar__in {\n    position: relative;\n    color: var(--icon_secondary);\n  }\n\n  .Avatar__img {\n    background: var(--placeholder_icon_background);\n    border: none;\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n  }\n\n  .Avatar__shadow {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    box-shadow: inset 0 0 0 1px var(--image_border);\n    pointer-events: none;\n    z-index: 2;\n  }\n\n  .Avatar__children {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 2;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let size:\n    | 96\n    | 80\n    | 72\n    | 64\n    | 56\n    | 48\n    | 44\n    | 40\n    | 36\n    | 32\n    | 28\n    | 24 = 48;\n  export let mode: 'default' | 'image' | 'app' = 'default';\n  export let shadow: boolean = true;\n\n  const platform = usePlatform();\n\n  let borderRadius: string = '50%';\n\n  switch (mode) {\n    case 'default':\n      borderRadius = '50%';\n      break;\n    case 'image':\n      borderRadius = '4';\n      break;\n    case 'app':\n      borderRadius = Math.floor((size * 10) / 48).toString();\n      break;\n  }\n\n  const SLOTS = $$props.$$slots;\n</script>\n\n<!-- \n@component\nНадстройка над `<img />`. Компонент принимает все валидные для этого элемента свойства.\n\n**Важно:** свойство `style` применяется к `img`, а не к корневому элементу. Чаще всего требуется стилизовать именно изображение, а не обертку.\n\n```tsx\n<Avatar src=\"https://sun9-65.userapi.com/Jm47wQlR6z_R_rbAd_7LUf0NQg7QAv35MpvNhA/Ht8eYywub4o.jpg?ava=1\"/>\n```\n-->\n\n<div\n  class=\"{classNames(getClassName('Avatar', platform), $$props.class, `Avatar--type-${mode}`, `Avatar--sz-${size}`)}\"\n>\n  <div class=\"Avatar__in\" style=\"{`width: ${size}px; height: ${size}px`}\">\n    {#if $$props.src}\n      <img\n        {...$$restProps}\n        class=\"Avatar__img\"\n        src=\"{$$props.src}\"\n        alt=\"{$$props.alt}\"\n        style=\"{$$props.style + `; border-radius:${borderRadius}`}\"\n      />\n    {:else}\n      <div\n        {...$$restProps}\n        class=\"Avatar__img\"\n        style=\"{$$props.style + `; border-radius:${borderRadius}`}\"\n      ></div>\n    {/if}\n\n    {#if shadow}\n      <span\n        class=\"Avatar__shadow\"\n        style=\"{`border-radius:${borderRadius}`}\"\n      ></span>\n    {/if}\n\n    {#if SLOTS && SLOTS.default}\n      <div\n        class=\"Avatar__children\"\n        style=\"{`width: ${size}px, height: ${size}px; border-radius:${borderRadius}`}\"\n      >\n        <slot />\n      </div>\n    {/if}\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { setContext } from 'svelte';\n  import { SSRContextKey, SSRBuildContext } from '../../lib/ssr';\n\n  export let userAgent: string;\n\n  setContext(SSRContextKey, SSRBuildContext({ userAgent }));\n</script>\n\n<slot />\n","<style>\n  .Group {\n    color: var(--text_primary);\n  }\n\n  .Group > *:not(.Header):first-child {\n    margin-top: 12px;\n  }\n\n  .Group > .Cell:first-child,\n  .Group > .CellButton:first-child,\n  .Group > .InfoRow:first-child {\n    margin-top: 8px;\n  }\n\n  .Group__description {\n    font-size: 14px;\n    line-height: 16px;\n    color: var(--text_secondary);\n  }\n\n  .Group__separator {\n    margin-top: 12px;\n  }\n\n  .Cell + .Group__separator,\n  .CellButton + .Group__separator,\n  .InfoRow + .Group__separator {\n    margin-top: 8px;\n  }\n\n  .Group:last-of-type :global(.Group__separator) {\n    display: none;\n  }\n\n  .Group:last-of-type :global(.Group__separator--force) {\n    display: block;\n  }\n\n  .Group--ios .Group__description {\n    padding: 4px 12px 24px;\n  }\n\n  .Group--android .Group__description {\n    padding: 4px 16px 24px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import Separator from './Separator.svelte';\n\n  /**\n    show - разделитель всегда показывается,\n    hide – разделитель всегда спрятан,\n    auto – разделитель рисуется автоматически между соседними группами.\n   */\n  export let separator: 'show' | 'hide' | 'auto' = 'auto';\n  export let description: string = '';\n\n  const platform = usePlatform();\n\n  const SLOTS = $$props.$$slots;\n</script>\n\n\n<!-- \n@component\nГруппа – базовый компонент для группировки контента по смыслу.\n-->\n\n<section\n  {...$$restProps}\n  class=\"{classNames(getClassName('Group', platform), $$props.class)}\"\n>\n  <slot name=\"header\" />\n  <slot />\n  {#if (SLOTS && SLOTS.description) || description !== ''}\n    <div class=\"Group__description\">\n      <slot name=\"description\">{description}</slot>\n    </div>\n  {/if}\n  {#if separator !== 'hide'}\n    <Separator\n      class=\"{classNames('Group__separator', {\n        'Group__separator--force': separator === 'show',\n      })}\"\n    />\n  {/if}\n</section>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let cancelClick = false;\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  const onDragStart = (e: DragEvent) => {\n    const target = e.target as HTMLElement;\n    console.log(target.tagName);\n\n    if (target.tagName === 'A' || target.tagName === 'IMG') {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   *\n   * @param {Object} e Браузерное событие\n   * @returns {void}\n   */\n  const onClick = (e: MouseEvent): void => {\n    if (cancelClick) {\n      cancelClick = false;\n      e.preventDefault();\n    }\n    dispatch('click', e);\n  };\n</script>\n\n<!-- \n@component\nTouch – это компонент для удобной работы с pointer событиями, такими как клик, тап, перетаскивание и т.д.\nОн инкапсулирует в себе логику обработки вышеперечисленных событий, дает возможность отдельно реагировать на движение\nпальца (или мышки) по осям X и Y, а так же предоставляет данные о геометрии жеста.\n\nКомпонент используется во многих других компонентах библиотеки (Cell, Slider, Gallery, Tappable).\n-->\n\n<div {...$$restProps} on:click=\"{onClick}\" on:dragstart=\"{onDragStart}\">\n  <slot />\n</div>\n","<style>\n  .Panel {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .Panel::after {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 1;\n    content: '';\n  }\n\n  .Panel--centered :global(.Panel__in) {\n    height: 100%;\n  }\n\n  .Panel--centered :global(.PanelHeader) {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n  }\n\n  .Panel__in {\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 100%;\n    z-index: 2;\n  }\n\n  .Panel__centered {\n    min-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n  }\n\n  .Panel__centered .PanelHeader--ios.PanelHeader--vis + * {\n    margin-top: var(--panelheader_height_ios);\n  }\n\n  .Panel__centered .PanelHeader--android.PanelHeader--vis + * {\n    margin-top: var(--panelheader_height_android);\n  }\n\n  .Panel--sizeX-compact\n    .Panel__centered\n    .PanelHeader--ios.PanelHeader--sep\n    + * {\n    margin-top: calc(var(--panelheader_height_ios) + 5px);\n  }\n\n  .Panel--sizeX-compact\n    .Panel__centered\n    .PanelHeader--android.PanelHeader--sep\n    + * {\n    margin-top: calc(var(--panelheader_height_android) + 5px);\n  }\n\n  .Panel--sizeX-regular\n    .Panel__centered\n    .PanelHeader--ios.PanelHeader--sep\n    + * {\n    margin-top: calc(var(--panelheader_height_ios) + 16px);\n  }\n\n  .Panel--sizeX-regular\n    .Panel__centered\n    .PanelHeader--android.PanelHeader--sep\n    + * {\n    margin-top: calc(var(--panelheader_height_android) + 16px);\n  }\n\n  :global(.Epic .Panel__in) {\n    padding-bottom: var(--tabbar_height);\n    padding-bottom: calc(var(--safe-area-inset-bottom) + var(--tabbar_height));\n  }\n\n  .Panel__in-before {\n    height: 1px;\n    margin-bottom: -1px;\n  }\n\n  .Panel__separator {\n    position: relative;\n    z-index: 3;\n  }\n\n  .Panel__in-after {\n    height: 1px;\n    margin-top: -1px;\n  }\n\n  .Panel :global(.Panel__in),\n  .Panel::after {\n    background-color: var(--background_content);\n  }\n\n  .Panel.Panel--regular :global(.Panel__in),\n  .Panel.Panel--regular::after {\n    background-color: transparent;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import { IOS } from '../../lib/platform';\n  import Touch from '../Service/Touch.svelte';\n  import { SizeType } from '../Service/AdaptivityContext';\n\n  // TODO: Нужно получать из контекста\n  export let sizeX: SizeType = SizeType.REGULAR;\n  // export let sizeY: SizeType = SizeType.REGULAR;\n  // export let viewWidth: ViewWidth = ViewWidth.MOBILE;\n\n  export let centered: boolean = false;\n\n  const platform = usePlatform();\n</script>\n\n<!-- TODO: -->\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Panel', platform), `Panel--${sizeX}`, { 'Panel--centered': centered, [`Panel--sizeX-${sizeX}`]: true }, $$props.class)}\"\n>\n  <Touch class=\"Panel__in\">\n    {#if platform === IOS}\n      <div class=\"Panel__fade\"></div>\n    {/if}\n    <div class=\"Panel__in-before\"></div>\n    {#if centered}\n      <div class=\"Panel__centered\">\n        <slot />\n      </div>\n    {:else}\n      <slot />\n    {/if}\n    <div class=\"Panel__in-after\"></div>\n  </Touch>\n\n</div>\n","<style>\n  .Switch {\n    display: block;\n  }\n\n  .Switch__self {\n    display: none;\n  }\n\n  .Switch__pseudo {\n    position: relative;\n    display: block;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  .Switch__pseudo::before {\n    position: absolute;\n    content: '';\n  }\n\n  .Switch__self:checked + .Switch__pseudo::before {\n    transform: translateX(20px);\n  }\n\n  /**\n * iOS\n */\n  .Switch--ios .Switch__pseudo {\n    width: 50px;\n    height: 30px;\n    border: 2px solid var(--switch_ios_off_border);\n    background: transparent;\n    border-radius: 15px;\n    box-sizing: border-box;\n    transition: background-color 0.2s ease, border-color 0.2s ease;\n  }\n\n  .Switch--ios .Switch__self:checked + .Switch__pseudo {\n    border-color: var(--accent);\n    background: var(--accent);\n  }\n\n  .Switch--ios .Switch__self[disabled] + .Switch__pseudo {\n    opacity: 0.4;\n  }\n\n  .Switch--ios .Switch__pseudo::before {\n    top: 0;\n    left: 0;\n    width: 26px;\n    height: 26px;\n    border-radius: 13px;\n    background: var(--white);\n    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15), 0 3px 1px rgba(0, 0, 0, 0.06),\n      inset 0 0 0 0.5px rgba(0, 0, 0, 0.04);\n    transition: transform 0.2s cubic-bezier(0.36, -0.24, 0.26, 1.32);\n  }\n\n  .Switch--ios .Switch__self:checked + .Switch__pseudo::before {\n    transform: translateX(20px);\n  }\n\n  /**\n * Android\n */\n\n  .Switch--android {\n    padding: 3px;\n  }\n\n  .Switch--android .Switch__pseudo {\n    width: 34px;\n    height: 14px;\n    background: #c6c5c5;\n    border-radius: 7px;\n    transition: background-color 0.1s ease;\n  }\n\n  .Switch--android .Switch__self:checked + .Switch__pseudo {\n    background: #a8bfdb;\n  }\n\n  .Switch--android .Switch__self[disabled] + .Switch__pseudo {\n    opacity: 0.4;\n  }\n\n  .Switch--android .Switch__pseudo::before {\n    top: -3px;\n    left: -3px;\n    width: 20px;\n    height: 20px;\n    background: #f1f1f1;\n    border-radius: 10px;\n    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24);\n    transition: transform 0.1s ease;\n  }\n\n  .Switch--android .Switch__self:checked + .Switch__pseudo::before {\n    background: var(--accent);\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nНадстройка над `<input type=\"checkbox\" />`. Компонент принимает все валидные для этого элемента свойства.\n-->\n\n<label\n  class=\"{classNames(getClassName('Switch', platform), $$props.class)}\"\n  style=\"{$$props.style}\"\n>\n  <input {...$$restProps} type=\"checkbox\" class=\"Switch__self\" />\n  <span class=\"Switch__pseudo\"></span>\n</label>\n","<style>\n  .InfoRow {\n    user-select: text;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 16px;\n    line-height: 20px;\n  }\n\n  /* margin у .Subhead перекрывает margin-bottom */\n  /* :global(.InfoRow__header) {\n    margin-bottom: 2px;\n    color: var(--text_secondary);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  } */\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n  import Subhead from '../Typography/Subhead.svelte';\n\n  export let header: string = '';\n\n  const platform = usePlatform();\n\n  const SLOTS = $$props.$$slots;\n</script>\n\n<!-- \n@component\nИнформационный блок. Используется для отрисовки некликабельных блоков с неизменяемым контентом (то есть без инпутов, слайдеров и т.п.)\nЕсли таких блоков несколько и они объединены по смыслу, то рекомендуется оборачивать список в `Group` с указанием `header`.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('InfoRow', platform), $$props.class)}\"\n>\n  {#if (SLOTS && SLOTS.header) || header}\n    <Subhead class=\"InfoRow__header\" weight=\"regular\">\n      <slot name=\"header\">{header}</slot>\n    </Subhead>\n  {/if}\n  <slot />\n</div>\n","<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nКонтейнер для однородных `Cell`.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('List', platform), $$props.class)}\"\n>\n  <slot />\n</div>\n","<style>\n  :global(.Footer) {\n    margin: 24px 0;\n    font-size: 13px;\n    color: var(--text_secondary);\n    line-height: 16px;\n    font-weight: normal;\n    text-align: center;\n  }\n\n  :global(.Div.Footer) {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n</style>\n\n<script lang=\"ts\">\n  import classNames from '../../lib/classNames';\n  import Div from './Div.svelte';\n\n</script>\n\n<!-- \n@component\nПодвал для списков.\n-->\n\n<Div class=\"{classNames('Footer', $$props.class)}\">\n  <slot />\n</Div>\n","import { IOS, platform } from './platform';\nconst memoized = {};\nexport function computeBrowserInfo(userAgent) {\n    if (memoized[userAgent]) {\n        return memoized[userAgent];\n    }\n    const platformName = platform(userAgent);\n    let platformVersion = null;\n    if (platformName === IOS) {\n        platformVersion = parseiOSVersion(userAgent);\n    }\n    const browserInfo = {\n        userAgent,\n        platform: platformName,\n        platformVersion,\n    };\n    memoized[userAgent] = browserInfo;\n    return browserInfo;\n}\nexport function parseiOSVersion(userAgent) {\n    if (!userAgent) {\n        return null;\n    }\n    const match = userAgent.match(/(iphone os|cpu os|ios) \\b([0-9]+_[0-9]+(?:_[0-9]+)?)\\b/i);\n    if (!match) {\n        return null;\n    }\n    const [major, minor, patch] = match[2].replace(/_/g, '.').split('.');\n    return {\n        major: parseInt(major) || 0,\n        minor: parseInt(minor) || 0,\n        patch: parseInt(patch) || 0,\n    };\n}\n","<style>\n  .UsersStack {\n    display: flex;\n    align-items: center;\n    color: var(--text_secondary);\n  }\n\n  .UsersStack__photos {\n    display: flex;\n  }\n\n  .UsersStack__photo {\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    border-radius: 50%;\n  }\n\n  .UsersStack__photo--others {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 13px;\n    font-weight: 600;\n    color: #fff;\n    background: var(--content_placeholder_icon);\n  }\n\n  .UsersStack--size-s .UsersStack__photo {\n    width: 24px;\n    height: 24px;\n  }\n\n  .UsersStack--size-m .UsersStack__photo {\n    width: 32px;\n    height: 32px;\n  }\n\n  .UsersStack__photo + .UsersStack__photo {\n    margin-left: 4px;\n  }\n\n  .UsersStack:not(.UsersStack--simple) .UsersStack__photo + .UsersStack__photo {\n    margin-left: -2px;\n  }\n\n  .UsersStack--size-s:not(.UsersStack--simple)\n    .UsersStack__photo\n    + .UsersStack__photo {\n    clip-path: url(#users_stack_mask_24_left);\n  }\n\n  .UsersStack--size-m:not(.UsersStack--simple)\n    .UsersStack__photo\n    + .UsersStack__photo {\n    clip-path: url(#users_stack_mask_32_left);\n  }\n\n  .UsersStack--size-m.UsersStack--others:not(.UsersStack--simple)\n    .UsersStack__photo {\n    clip-path: url(#users_stack_mask_32_right);\n  }\n\n  .UsersStack--size-m.UsersStack--others:not(.UsersStack--simple)\n    .UsersStack__photo:last-child {\n    clip-path: none;\n  }\n\n  .UsersStack__text {\n    min-width: 0;\n    flex: 1;\n    margin: 0 0 0 8px;\n    font-size: 13px;\n    line-height: 16px;\n  }\n\n  /* Vertical layout */\n\n  .UsersStack--l-vertical {\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .UsersStack--l-vertical .UsersStack__text {\n    margin: 8px 0 0;\n    text-align: center;\n  }\n\n  /* iOS */\n\n  .UsersStack--ios {\n    padding: 8px 12px;\n  }\n\n  /* Android */\n\n  .UsersStack--android {\n    padding: 8px 16px;\n  }\n</style>\n\n<script lang=\"ts\" context=\"module\">\n  import { canUseDOM, onDOMLoaded } from '../../lib/dom';\n  if (canUseDOM) {\n    const svgElement = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'svg',\n    );\n    svgElement.setAttributeNS(null, 'id', '__SVG_MASKS_NODE__');\n    svgElement.setAttributeNS(null, 'width', '0');\n    svgElement.setAttributeNS(null, 'height', '0');\n    svgElement.style.position = 'absolute';\n    svgElement.style.width = '0px';\n    svgElement.style.height = '0px';\n\n    svgElement.innerHTML = `<defs>\n  <clipPath id=\"users_stack_mask_24_left\">\n    <path d=\"M3.9971785,12 C3.9971785,9.49005736 3.33667467,7.13438366 2.18,5.09731189 C4.35181237,2.01417617 7.93927741,0 11.9971785,0 C18.6245955,0 23.9971785,5.372583 23.9971785,12 C23.9971785,18.627417 18.6245955,24 11.9971785,24 C7.93927741,24 4.35181237,21.9858238 2.18,18.9026881 C3.33667467,16.8656163 3.9971785,14.5099426 3.9971785,12 Z\"></path>\n  </clipPath>\n\n  <clipPath id=\"users_stack_mask_24_right\">\n    <path d=\"M21.8171785,5.09731189 C20.6605038,7.13438366 20,9.49005736 20,12 C20,14.5099426 20.6605038,16.8656163 21.8171785,18.9026881 C19.6453661,21.9858238 16.0579011,24 12,24 C5.372583,24 3.90798505e-14,18.627417 3.90798505e-14,12 C3.90798505e-14,5.372583 5.372583,0 12,0 C16.0579011,0 19.6453661,2.01417617 21.8171785,5.09731189 Z\"></path>\n  </clipPath>\n\n  <clipPath id=\"users_stack_mask_32_left\">\n    <path d=\"M2.13430019,23.9892466 C3.32858917,21.5820026 4,18.8694095 4,16 C4,13.1305905 3.32858917,10.4179974 2.13430019,8.0107534 C4.89924175,3.22241289 10.0733034,-2.30926389e-14 16,-2.30926389e-14 C24.836556,-2.30926389e-14 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 C10.0733034,32 4.89924175,28.7775871 2.13430019,23.9892466 L2.13430019,23.9892466 Z\"></path>\n  </clipPath>\n\n  <clipPath id=\"users_stack_mask_32_right\">\n    <path d=\"M29.8656998,8.0107534 C28.6714108,10.4179974 28,13.1305905 28,16 C28,18.8694095 28.6714108,21.5820026 29.8656998,23.9892466 C27.1007583,28.7775871 21.9266966,32 16,32 C7.163444,32 3.90798505e-14,24.836556 3.90798505e-14,16 C3.90798505e-14,7.163444 7.163444,0 16,0 C21.9266966,0 27.1007583,3.22241289 29.8656998,8.0107534 Z\"></path>\n  </clipPath>\n</defs>`;\n\n    onDOMLoaded(() => {\n      document.body.appendChild(svgElement);\n    });\n  }\n</script>\n\n<script lang=\"ts\">\n  import { IOS } from '../../lib/platform';\n  import useBrowserInfo from '../../hooks/useBrowserInfo';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  /**\n   * Массив ссылок на фотографии\n   */\n  export let photos: string[] = [];\n  /**\n   * Размер аватарок\n   */\n  export let size: 's' | 'm' = 's';\n  /**\n   * Вертикальный режим рекомендуется использовать с размером `m`\n   */\n  export let layout: 'vertical' | 'horizontal' = 'horizontal';\n  /**\n   * Количество аватарок, которые будут показаны.\n   * Если в массиве `photos` больше элементов и используется размер `m`, то будет показано количество остальных элементов\n   */\n  export let visibleCount: number = 3;\n\n  const { platform, platformVersion } = useBrowserInfo();\n\n  const othersCount = Math.max(0, photos.length - visibleCount);\n  const canShowOthers = othersCount > 0 && size === 'm';\n\n  const photosShown = photos.slice(0, visibleCount);\n\n  let canUseClipPath = true;\n  if (platform === IOS) {\n    canUseClipPath = platformVersion && platformVersion.major >= 12;\n  }\n\n  const SLOTS = $$props.$$slots;\n</script>\n\n<!-- \n@component\nИспользуется для отображения аватарок пользователей с каким-то сопроводительным текстом.\n\nУ компонента есть вертикальный режим – когда текст располагается под аватарками. В таком режиме рекомендуется использовать размер `m`.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('UsersStack', platform), `UsersStack--size-${size}`, `UsersStack--l-${layout}`, { 'UsersStack--others': canShowOthers, 'UsersStack--simple': !canUseClipPath }, $$props.class)}\"\n>\n  <div class=\"UsersStack__photos\">\n    {#each photosShown as photo}\n      <div\n        class=\"UsersStack__photo\"\n        style=\"{`background-image: url(${photo})`}\"\n      ></div>\n    {/each}\n    {#if canShowOthers}\n      <div\n        class=\"{classNames('UsersStack__photo', 'UsersStack__photo--others')}\"\n      >\n        {`+${othersCount}`}\n      </div>\n    {/if}\n  </div>\n  {#if SLOTS && SLOTS.default}\n    <div class=\"UsersStack__text\">\n      <slot />\n    </div>\n  {/if}\n</div>\n","import { getContext } from 'svelte';\nimport { SSRContextKey } from '../lib/ssr';\nimport { canUseDOM } from '../lib/dom';\nimport { computeBrowserInfo } from '../lib/browser';\nexport default function useBrowserInfo() {\n    const ssrContext = getContext(SSRContextKey);\n    let userAgent = canUseDOM && navigator.userAgent ? navigator.userAgent : '';\n    if (ssrContext && ssrContext.platform) {\n        userAgent = ssrContext.platform;\n    }\n    return computeBrowserInfo(userAgent);\n}\n","<style>\n  .Counter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .Counter__in {\n    text-align: center;\n    box-sizing: border-box;\n  }\n\n  .Counter--primary {\n    background: var(--counter_primary_background);\n    color: var(--counter_primary_text);\n  }\n\n  .Counter--secondary {\n    background: var(--counter_secondary_background);\n    color: var(--counter_secondary_text);\n  }\n\n  .Counter--prominent {\n    background: var(--counter_prominent_background);\n    color: var(--counter_prominent_text);\n  }\n\n  .Counter--s-m {\n    height: 24px;\n    border-radius: 12px;\n  }\n\n  .Counter--s-m .Counter__in {\n    min-width: 24px;\n    padding: 2px 5px;\n    font-size: 15px;\n    line-height: 20px;\n  }\n\n  .Counter--s-s {\n    height: 18px;\n    border-radius: 9px;\n  }\n\n  .Counter--s-s .Counter__in {\n    min-width: 18px;\n    padding: 1px 5px;\n    font-size: 12px;\n    line-height: 16px;\n  }\n</style>\n\n<script lang=\"ts\">\n  import usePlatform from '../../hooks/usePlatform';\n  import classNames from '../../lib/classNames';\n  import getClassName from '../../lib/getClassName';\n\n  export let mode: 'secondary' | 'primary' | 'prominent' = 'secondary';\n  export let size: 's' | 'm' = 'm';\n\n  const platform = usePlatform();\n</script>\n\n<!-- \n@component\nКомпонент для отрисовки счетчика в ячейках и кнопках.\nПринимает в качестве слота число или строку с отформатированным числом по разрядам.\n-->\n\n<div\n  {...$$restProps}\n  class=\"{classNames(getClassName('Counter', platform), $$props.class, `Counter--${mode}`, `Counter--s-${size}`)}\"\n>\n  <div class=\"Counter__in\">\n    <slot />\n  </div>\n</div>\n","<style>\n  main {\n    max-width: 900px;\n    margin: 0 auto;\n  }\n  main :global(.Example) {\n    height: 667px;\n    width: 375px;\n    border: 1px solid rgba(0, 0, 0, 0.12);\n    display: block;\n    margin: auto;\n  }\n</style>\n\n<script lang=\"ts\">\n  import Div from './components/Blocks/Div.svelte';\n  import Progress from './components/Blocks/Progress.svelte';\n  import './styles/constants.css';\n  import './styles/styles.css';\n  import './styles/bright_light.css';\n  import Title from './components/Typography/Title.svelte';\n  import Caption from './components/Typography/Caption.svelte';\n  import Text from './components/Typography/Text.svelte';\n  import Subhead from './components/Typography/Subhead.svelte';\n  import CardGrid from './components/Blocks/CardGrid.svelte';\n  import SimpleCell from './components/Blocks/SimpleCell.svelte';\n  import Gradient from './components/Blocks/Gradient.svelte';\n  import CardScroll from './components/Blocks/CardScroll.svelte';\n  import Card from './components/Blocks/Card.svelte';\n  import Header from './components/Blocks/Header.svelte';\n  import Separator from './components/Blocks/Separator.svelte';\n  import Link from './components/Blocks/Link.svelte';\n  import Avatar from './components/Blocks/Avatar.svelte';\n  import SSRWrapper from './components/Service/SSRWrapper.svelte';\n  import Group from './components/Blocks/Group.svelte';\n  import Headline from './components/Typography/Headline.svelte';\n  import Panel from './components/Layout/Panel.svelte';\n  import Switch from './components/Blocks/Switch.svelte';\n  import InfoRow from './components/Blocks/InfoRow.svelte';\n  import List from './components/Blocks/List.svelte';\n  import Footer from './components/Blocks/Footer.svelte';\n  import UsersStack from './components/Blocks/UsersStack.svelte';\n  import Counter from './components/Blocks/Counter.svelte';\n</script>\n\n<main>\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Layout</Title>\n    <Panel>\n      <div class=\"Example\">test</div>\n    </Panel>\n  </Div>\n\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Popouts</Title>\n  </Div>\n\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Modals</Title>\n  </Div>\n\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Blocks</Title>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Button</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">CellButton</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Div</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Link</Title>\n      <div class=\"Example\">\n        <Link href=\"https://google.com\" target=\"_blank\">Google</Link>\n        <Link href=\"/profile\">Profile</Link>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Header</Title>\n      <div class=\"Example\">\n        <Header>Рекомендации</Header>\n        <Separator />\n        <Header>\n          <div slot=\"aside\">\n            <Link>Показать все</Link>\n          </div>\n          Плейлисты\n        </Header>\n        <Separator />\n        <!-- <Header aside={<Link>Добавленные<Icon16Dropdown /></Link>} indicator={16}>\n          Мои видео\n        </Header>\n        <Separator />-->\n        <!-- <Header aside={<Icon24Dismiss />}>\n          Недавние\n        </Header>\n        <Separator />-->\n        <Header>\n          <div slot=\"aside\">\n            <Link>Показать все</Link>\n          </div>\n          <div slot=\"indicator\">\n            <Counter size=\"s\" mode=\"prominent\">3</Counter>\n          </div>\n          Заявки в друзья\n        </Header>\n        <Separator />\n        <Header subtitle=\"SOHN — Conrad\">\n          <div slot=\"aside\">\n            <Link>Показать все</Link>\n          </div>\n          Похожее на\n        </Header>\n        <div style=\"margin-bottom: 100px\"></div>\n        <Separator />\n        <Header mode=\"secondary\">Важные</Header>\n        <Separator />\n        <Header mode=\"secondary\">\n          <div slot=\"aside\">\n            <Link>Показать все</Link>\n          </div>\n          Приглашения\n        </Header>\n        <Separator />\n        <!-- <Header mode=\"secondary\" indicator=\"667\" aside={<Icon16Chevron />}>\n          Фотографии\n        </Header>\n        <Separator />-->\n        <Header mode=\"secondary\">\n          <div slot=\"aside\">\n            <Link>Показать все</Link>\n          </div>\n          <div slot=\"indicator\">\n            <Counter size=\"s\" mode=\"prominent\">3</Counter>\n          </div>\n          Приглашения\n        </Header>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Group</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Card</Title>\n      <div class=\"Example\">\n        <Group separator=\"hide\">\n          <div slot=\"header\">\n            <Header mode=\"secondary\">Дефолтный стиль</Header>\n          </div>\n          <CardGrid>\n            <Card size=\"l\">\n              <div style=\"height: 96px\"></div>\n            </Card>\n          </CardGrid>\n        </Group>\n        <Group separator=\"hide\">\n          <div slot=\"header\">\n            <Header mode=\"secondary\">С внутренней обводкой</Header>\n          </div>\n          <CardGrid>\n            <Card size=\"l\" mode=\"outline\">\n              <div style=\"height: 96px\"></div>\n            </Card>\n          </CardGrid>\n        </Group>\n        <Group separator=\"hide\">\n          <div slot=\"header\">\n            <Header mode=\"secondary\">С внешней тенью</Header>\n          </div>\n          <CardGrid>\n            <Card size=\"l\" mode=\"shadow\">\n              <div style=\"height: 96px\"></div>\n            </Card>\n          </CardGrid>\n        </Group>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">CardGrid</Title>\n      <div class=\"Example\">\n        <CardGrid>\n          <Card size=\"l\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n          <Card size=\"m\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n          <Card size=\"m\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n          <Card size=\"s\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n          <Card size=\"s\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n          <Card size=\"s\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n          <Card size=\"l\">\n            <div style=\"height: 96px\"></div>\n          </Card>\n        </CardGrid>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">CardScroll</Title>\n      <div class=\"Example\">\n        <Group\n          separator=\"hide\"\n          description=\"Рекомендуемый размер карточки — 144px\"\n        >\n          <CardScroll>\n            <Card size=\"s\">\n              <div style=\"width: 144px; height: 96px\"></div>\n            </Card>\n            <Card size=\"s\">\n              <div style=\"width: 144px; height: 96px\"></div>\n            </Card>\n            <Card size=\"s\">\n              <div style=\"width: 144px; height: 96px\"></div>\n            </Card>\n            <Card size=\"s\">\n              <div style=\"width: 144px; height: 96px\"></div>\n            </Card>\n          </CardScroll>\n        </Group>\n        <Group\n          separator=\"hide\"\n          description=\"Рекомендуемый размер карточки — 224px\"\n        >\n          <CardScroll>\n            <Card size=\"m\">\n              <div style=\"width: 224px; height: 96px\"></div>\n            </Card>\n            <Card size=\"m\">\n              <div style=\"width: 224px; height: 96px\"></div>\n            </Card>\n            <Card size=\"m\">\n              <div style=\"width: 224px; height: 96px\"></div>\n            </Card>\n          </CardScroll>\n        </Group>\n        <Group\n          separator=\"hide\"\n          description=\"Ширина карточки <Card size='l' /> зафиксирована в CSS\n          так, чтобы каждая карточка занимала всю ширину вьюпорта\"\n        >\n          <CardScroll>\n            <Card size=\"l\">\n              <div style=\"height: 96px\"></div>\n            </Card>\n            <Card size=\"l\">\n              <div style=\"height: 96px\"></div>\n            </Card>\n            <Card size=\"l\">\n              <div style=\"height: 96px\"></div>\n            </Card>\n          </CardScroll>\n        </Group>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Gradient</Title>\n      <div class=\"Example\">\n        <Gradient>\n          <Group>\n            <div slot=\"header\">\n              <Header subtitle=\"С быстрым входом\">\n                <div slot=\"aside\">\n                  <Link>Показать все</Link>\n                </div>\n                Другие сервисы VK\n              </Header>\n            </div>\n            <CardScroll style=\"padding-bottom: 20px\">\n              <Card mode=\"outline\" size=\"s\">\n                <div style=\"width: 144px; height: 96px\"></div>\n              </Card>\n              <Card mode=\"outline\" size=\"s\">\n                <div style=\"width: 144px; height: 96px\"></div>\n              </Card>\n              <Card mode=\"outline\" size=\"s\">\n                <div style=\"width: 144px; height: 96px\"></div>\n              </Card>\n              <Card mode=\"outline\" size=\"s\">\n                <div style=\"width: 144px; height: 96px\"></div>\n              </Card>\n            </CardScroll>\n          </Group>\n        </Gradient>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Cell</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">SimpleCell</Title>\n      <div class=\"Example\">\n        <Group>\n          <Header mode=\"secondary\">Настройки</Header>\n          <SimpleCell disabled>\n            <div slot=\"after\">\n              <Switch checked />\n            </div>\n            Сжимать фотографии\n          </SimpleCell>\n          <SimpleCell disabled>\n            <div slot=\"after\">\n              <Switch />\n            </div>\n            Сжимать видео\n          </SimpleCell>\n        </Group>\n        <Group>\n          <Header mode=\"secondary\">Настройки системы</Header>\n          <SimpleCell expandable indicator=\"Русский\">Язык</SimpleCell>\n          <SimpleCell expandable indicator=\"При использовании\">\n            Геолокация\n          </SimpleCell>\n        </Group>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">RichCell</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">List</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Footer</Title>\n      <div class=\"Example\">\n        <Group>\n          <List>\n            <SimpleCell description=\"Веб-сайт\">\n              <div slot=\"before\">\n                <Avatar size=\"{48}\" />\n              </div>\n              Команда ВКонтакте\n            </SimpleCell>\n            <SimpleCell description=\"Музыкант\">\n\n              <div slot=\"before\">\n                <Avatar size=\"{48}\" />\n              </div>\n              Robbie Williams\n            </SimpleCell>\n            <SimpleCell description=\"Издательский дом\">\n\n              <div slot=\"before\">\n                <Avatar size=\"{48}\" />\n              </div>\n              ПостНаука\n            </SimpleCell>\n          </List>\n        </Group>\n        <Footer>3 cообщества</Footer>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Spinner</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">PanelSpinner</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Switch</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">InfoRow</Title>\n      <div class=\"Example\">\n        <Group>\n          <SimpleCell>\n            <InfoRow header=\"Общий бюджет\">3000 р.</InfoRow>\n          </SimpleCell>\n        </Group>\n        <Group>\n          <Header mode=\"secondary\">Информация о пользователе</Header>\n          <SimpleCell multiline>\n            <InfoRow header=\"Дата рождения\">30 января 1993</InfoRow>\n          </SimpleCell>\n          <SimpleCell>\n            <InfoRow header=\"Родной город\">Ереван</InfoRow>\n          </SimpleCell>\n          <SimpleCell>\n            <InfoRow header=\"Место работы\">Команда ВКонтакте</InfoRow>\n          </SimpleCell>\n        </Group>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Avatar</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Gallery</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Progress</Title>\n      <div class=\"Example\">\n        <Group>\n          <Div>\n            <InfoRow header=\"Default\">\n              <Progress value=\"{40}\" />\n            </InfoRow>\n          </Div>\n        </Group>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Search</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Tabs</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">TabsItem</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Tooltip</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">PullToRefresh</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Counter</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">UsersStack</Title>\n      <div class=\"Example\">\n        <Group>\n          <UsersStack\n            photos=\"{['https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1']}\"\n          >\n            Понравилось Муртолу Левзачеву\n          </UsersStack>\n        </Group>\n\n        <Group>\n          <UsersStack\n            photos=\"{['https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1']}\"\n            size=\"m\"\n          >\n            Настя и Jean пойдут на это мероприятие\n          </UsersStack>\n        </Group>\n\n        <Group>\n          <UsersStack\n            photos=\"{['https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1']}\"\n          >\n            Иван и ещё 2 ваших друга подписаны\n          </UsersStack>\n        </Group>\n\n        <Group>\n          <div slot=\"header\">\n            <Header mode=\"secondary\">Вертикальный режим</Header>\n          </div>\n          <UsersStack\n            photos=\"{['https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1', 'https://sun9-69.userapi.com/c206728/v206728108/15b1b9/YpxKXVzlvaA.jpg?ava=1']}\"\n            size=\"m\"\n            count=\"{3}\"\n            layout=\"vertical\"\n          >\n            Алексей, Илья, Михаил\n            <br />\n            и ещё 3 человека\n          </UsersStack>\n        </Group>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Separator</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Placeholder</Title>\n      <div class=\"Example\"></div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Banner</Title>\n      <div class=\"Example\"></div>\n    </Div>\n  </Div>\n\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Forms</Title>\n  </Div>\n\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Typography</Title>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Title</Title>\n      <div class=\"Example\">\n        <Title level=\"1\" weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Title 1 semibold\n        </Title>\n        <Title level=\"1\" weight=\"bold\" style=\"margin-bottom: 16px\">\n          Title 1 bold\n        </Title>\n        <Title level=\"1\" weight=\"heavy\" style=\"margin-bottom: 16px\">\n          Title 1 heavy\n        </Title>\n        <Title level=\"2\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Title 2 regular\n        </Title>\n        <Title level=\"2\" weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Title 2 semibold\n        </Title>\n        <Title level=\"2\" weight=\"heavy\" style=\"margin-bottom: 16px\">\n          Title 2 heavy\n        </Title>\n        <Title level=\"3\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Title 3 regular\n        </Title>\n        <Title level=\"3\" weight=\"medium\" style=\"margin-bottom: 16px\">\n          Title 3 medium\n        </Title>\n        <Title level=\"3\" weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Title 3 semibold\n        </Title>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Headline</Title>\n      <div class=\"Example\">\n        <Headline weight=\"regular\" style=\"margin-bottom: 16px\">\n          Headline regular\n        </Headline>\n        <Headline weight=\"medium\" style=\"margin-bottom: 16px\">\n          Headline medium\n        </Headline>\n        <Headline weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Headline semibold\n        </Headline>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Text</Title>\n      <div class=\"Example\">\n        <Text weight=\"regular\" style=\"margin-bottom: 16px\">Text regular</Text>\n        <Text weight=\"medium\" style=\"margin-bottom: 16px\">Text medium</Text>\n        <Text weight=\"semibold\" style=\"margin-bottom: 16px\">Text semibold</Text>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Subhead</Title>\n      <div class=\"Example\">\n        <Subhead weight=\"regular\" style=\"margin-bottom: 16px\">\n          Subhead regular\n        </Subhead>\n        <Subhead weight=\"medium\" style=\"margin-bottom: 16px\">\n          Subhead medium\n        </Subhead>\n        <Subhead weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Subhead semibold\n        </Subhead>\n        <Subhead weight=\"bold\" style=\"margin-bottom: 16px\">\n          Subhead bold\n        </Subhead>\n      </div>\n    </Div>\n    <Div>\n      <Title level=\"2\" weight=\"semibold\">Caption</Title>\n      <div class=\"Example\">\n        <Caption level=\"1\" weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Caption 1 semibold\n        </Caption>\n        <Caption level=\"1\" weight=\"bold\" style=\"margin-bottom: 16px\">\n          Caption 1 bold\n        </Caption>\n        <Caption level=\"1\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Caption 1 regular\n        </Caption>\n        <Caption level=\"1\" weight=\"regular\" caps style=\"margin-bottom: 16px\">\n          Caption CAPS 1 regular\n        </Caption>\n        <Caption level=\"2\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Caption 2 regular\n        </Caption>\n        <Caption level=\"2\" weight=\"semibold\" style=\"margin-bottom: 16px\">\n          Caption 2 semibold\n        </Caption>\n        <Caption level=\"2\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Caption 2 regular\n        </Caption>\n        <Caption level=\"2\" weight=\"regular\" caps style=\"margin-bottom: 16px\">\n          Caption CAPS 2 regular\n        </Caption>\n        <Caption level=\"3\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Caption 3 regular\n        </Caption>\n        <Caption level=\"3\" weight=\"semibold\" caps style=\"margin-bottom: 16px\">\n          Caption CAPS 3 semibold\n        </Caption>\n        <Caption level=\"4\" weight=\"regular\" style=\"margin-bottom: 16px\">\n          Caption 4 regular\n        </Caption>\n        <Caption level=\"4\" weight=\"semibold\" caps>\n          Caption CAPS 4 semibold\n        </Caption>\n      </div>\n    </Div>\n  </Div>\n\n  <Div>\n    <Title level=\"1\" weight=\"heavy\">Server Side Rendering</Title>\n    <Div>\n      <SSRWrapper userAgent=\"android\">\n        <Div>Android Div</Div>\n      </SSRWrapper>\n      <SSRWrapper userAgent=\"iphone\">\n        <Div>iPhone Div</Div>\n      </SSRWrapper>\n    </Div>\n  </Div>\n</main>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_style","important","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","getContext","context","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","pop","callback","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","Map","skip_bound","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","canUseDOM","window","OS","ANDROID","IOS","platform","useragent","ua","navigator","userAgent","test","SSRContextKey","usePlatform","ssrContext","classNames","classnames","item","join","getClassName","base","osName","class","styleInject","css","ref","insertAt","head","getElementsByTagName","firstChild","styleSheet","SizeType","ViewWidth","weight","headlineWeight","spread_props","level","titleWeight","Caption--caps","caps","captionWeight","textWeight","subheadWeight","description","indicator","after","SimpleCell--exp","SimpleCell--mult","sizeX","REGULAR","expandable","multiline","SLOTS","$$slots","mode","to","size","subtitle","aside","Header--pi","Separator--wide","wide","href","alt","default","shadow","borderRadius","floor","toString","SSRBuildContext","Group__separator--force","separator","dispatch","console","log","tagName","preventDefault","Panel--centered","centered","header","memoized","computeBrowserInfo","platformName","platformVersion","match","major","minor","patch","replace","split","parseInt","parseiOSVersion","browserInfo","UsersStack--others","UsersStack--simple","iterations","svgElement","createElementNS","setAttributeNS","position","width","height","innerHTML","body","readyState","photos","layout","visibleCount","useBrowserInfo","othersCount","canShowOthers","photosShown","canUseClipPath"],"mappings":"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"}